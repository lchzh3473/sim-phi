{"version":3,"file":"online-DjG1yxyz.js","sources":["../src/plugins/online.js"],"sourcesContent":["import { parseCSV } from '@/utils/parseCSV';\nexport default hook.define({\n  name: 'Online Resource',\n  description: 'Provides online resource',\n  contents: [\n    {\n      type: 'command',\n      meta: ['/a', dialog]\n    }\n  ]\n});\nconst { sendText, uploader } = hook;\nconst host = atob('aHR0cHM6Ly9iay0xMzAyMTcxMzY0LmNvcy5hcC1zaGFuZ2hhaS5teXFjbG91ZC5jb20v');\nconst getResourseUrl = (url = '') => new URL(url, host).href;\n// eslint-disable-next-line no-alert\nconst vprompt = str => prompt(`${str}`);\nconst valert = str => hook.toast(`${str}`);\nconst msgNetErr = err => {\n  valert(`无法连接至服务器\\n错误代码：${err.message}`);\n  sendText('无法连接至服务器');\n};\nasync function dialog(str) {\n  const url = str || vprompt('请输入资源URL');\n  if (url === '' || url == null) { valert('未输入URL，已取消操作'); return }\n  const data = await query(url).catch(msgNetErr);\n  console.log(data);\n}\nasync function query(path = '') {\n  const base = getResourseUrl(`${path}/`);\n  sendText('等待服务器响应...');\n  const resList = [];\n  const encoder = new TextEncoder();\n  const resInfo = await fetch(new URL('info.csv', base));\n  if (resInfo.ok) {\n    const textInfo = await resInfo.text();\n    const csvInfo = parseCSV(textInfo, true);\n    // console.log(csvInfo);\n    for (const row of csvInfo) {\n      if (row.Chart) resList.push(new URL(row.Chart, base));\n      if (row.Music) resList.push(new URL(row.Music, base));\n      if (row.Image) resList.push(new URL(row.Image, base));\n    }\n    const info = encoder.encode(textInfo);\n    uploader.fireLoad({ name: 'info.csv' }, info.buffer);\n  } else throw new Error(`${resInfo.status} ${resInfo.statusText}`);\n  const resLine = await fetch(new URL('line.csv', base));\n  if (resLine.ok) {\n    const textLine = await resLine.text();\n    const csvLine = parseCSV(textLine, true);\n    // console.log(csvLine);\n    for (const row of csvLine) {\n      if (row.Chart) resList.push(new URL(row.Chart, base));\n      if (row.Image) resList.push(new URL(row.Image, base));\n    }\n    const line = encoder.encode(textLine);\n    uploader.fireLoad({ name: 'line.csv' }, line.buffer);\n  } // else throw new Error(`${resLine.status} ${resLine.statusText}`);\n  const downloader = new Downloader();\n  await downloader.add(resList, ({ url, status, statusText }) => {\n    valert(`资源 '${url}' 加载失败\\n错误代码：${status} ${statusText}`);\n  });\n  await downloader.start(uploader.fireProgress.bind(uploader));\n  const dstr = str => decodeURIComponent(str.match(/[^/]+$/)[0]);\n  for (const res of resList) {\n    const data1 = await downloader.getData(res) || new ArrayBuffer(0);\n    uploader.fireLoad({ name: dstr(res.toString()) }, data1); // 以后添加catch\n  }\n}\n/**\n * @typedef {(ev:ProgressEvent<XMLHttpRequest>)} XHR\n * @param {string} url\n * @param {XHR} onprogress\n */\nfunction xhr2(url, onprogress = _ => {}) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onprogress = onprogress;\n    xhr.onload = evt => (xhr.status === 200 ? resolve : reject)(evt);\n    xhr.onerror = reject;\n    xhr.send();\n  });\n}\nasync function getContentLength(url) {\n  try {\n    const res = await fetch(url, { method: 'HEAD' }).catch(() => {\n      throw Object.assign(new Error(), { url, status: 0, statusText: 'Network Error' });\n    });\n    const length = res.headers.get('content-length'); // 踩坑：这里的length是字符串\n    if (length == null) throw new Error('No Content-Length Header');\n    if (res.ok) return Number(length);\n  } catch (ignoreErr) {\n    const res = await fetch(url, { method: 'GET' }).catch(() => {\n      throw Object.assign(new Error(), { url, status: 0, statusText: 'Network Error' });\n    });\n    res.body.cancel();\n    if (!res.ok) throw Object.assign(new Error(), { url, status: res.status, statusText: res.statusText });\n    return Number(res.headers.get('content-length')) || 0;\n  }\n  throw Object.assign(new Error(), { url, status: 0, statusText: 'Unknown Error' });\n}\nfunction Downloader() {\n  this.xhrs = Object.create(null);\n}\nDownloader.prototype.add = function(urls = [], onerror = _ => {}) {\n  return Promise.all(urls.\n    filter(url => !this.xhrs[url]).\n    map(async url => {\n      try {\n        const total = await getContentLength(url);\n        this.xhrs[url] = { event: { loaded: 0, total } };\n      } catch (result) {\n        onerror(result);\n      }\n    }));\n};\nDownloader.prototype.start = function(onprogress = (..._) => {}) {\n  const entries = Object.entries(this.xhrs);\n  return Promise.all(entries.map(([url, xhr]) => xhr2(url, evt => {\n    xhr.event = evt;\n    onprogress(this.loaded, this.total);\n  }).then(evt => xhr.event = evt).catch(evt => xhr.event = evt)));\n};\nDownloader.prototype.getData = function(url) {\n  if (!this.xhrs[url]) return null;\n  const { event } = this.xhrs[url];\n  if (event.loaded >= event.total) return event.target.response;\n  return null;\n};\nObject.defineProperty(Downloader.prototype, 'loaded', { get() {\n  const values = Object.values(this.xhrs);\n  return values.reduce((loaded, xhr) => loaded + xhr.event.loaded, 0);\n} });\nObject.defineProperty(Downloader.prototype, 'total', { get() {\n  const values = Object.values(this.xhrs);\n  return values.reduce((total, xhr) => total + Math.max(xhr.event.loaded, xhr.event.total), 0);\n} });\n"],"names":["online","hook","define","name","description","contents","type","meta","async","str","url","vprompt","valert","data","path","base","getResourseUrl","sendText","resList","encoder","TextEncoder","resInfo","fetch","URL","ok","Error","status","statusText","textInfo","text","csvInfo","parseCSV","row","Chart","push","Music","Image","info","encode","uploader","fireLoad","buffer","resLine","textLine","csvLine","line","downloader","Downloader","add","start","fireProgress","bind","dstr","decodeURIComponent","match","res","data1","getData","ArrayBuffer","toString","query","catch","msgNetErr","console","log","host","atob","v","href","prompt","toast","err","message","this","xhrs","Object","create","prototype","urls","onerror","_","Promise","all","filter","map","total","method","assign","length","headers","get","Number","body","cancel","getContentLength","event","loaded","result","onprogress","n","entries","xhr","resolve","reject","XMLHttpRequest","open","responseType","onload","evt","send","xhr2","then","target","response","defineProperty","values","reduce","Math","max"],"mappings":"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"}